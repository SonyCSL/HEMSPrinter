{
  "name": "reduplexer",
  "version": "1.1.0",
  "description": "Another Stream2 duplexer",
  "main": "index.js",
  "scripts": {
    "test": "node test.js | faucet",
    "test-browser": "zuul --local 8080 --ui tape -- test.js"
  },
  "pre-commit": [
    "test"
  ],
  "website": "https://github.com/mcollina/reduplexer",
  "repository": {
    "type": "git",
    "url": "https://github.com/mcollina/reduplexer.git"
  },
  "bugs": {
    "url": "http://github.com/mcollina/reduplexer/issues"
  },
  "author": {
    "name": "Matteo Collina",
    "email": "hello@matteocollina.com"
  },
  "license": "ISC",
  "devDependencies": {
    "faucet": "0.0.1",
    "pre-commit": "0.0.9",
    "tape": "^2.14.0",
    "zuul": "^1.10.1"
  },
  "dependencies": {
    "inherits": "^2.0.1",
    "readable-stream": "~1.0.26-2"
  },
  "keywords": [
    "duplexer",
    "streams",
    "streams2",
    "duplex",
    "readable",
    "writable"
  ],
  "readme": "# reduplexer(writable, readable, options)\n\n[![build status][1]][2]\n\nTakes a [`Writable`][5] stream and a [`Readable`][4] stream and makes them appear as a `Duplex` stream.\nHeavily inspired by [duplexer](http://npm.im/duplexer) but using Stream2\nwith a bundled [readable-stream](http://npm.im/readable-stream).\n\nIt is assumed that the two streams are connected to each other in some way.\n\n## Example\n\n```js\nvar cp        = require('child_process')\n  , duplexer  = require('reduplexer')\n  , grep      = cp.exec('grep Stream')\n\nduplexer(grep.stdin, grep.stdout, { objectMode: true })\n```\n\n## Installation\n\n`npm install reduplexer --save`\n\n## API\n\n  * <a href=\"#reduplexer\"><code><b>reduplexer()</b></code></a>\n  * <a href=\"#hookWritable\"><code>duplex.<b>hookWritable()</b></code></a>\n  * <a href=\"#hookReadable\"><code>duplex.<b>hookReadable()</b></code></a>\n  * <a href=\"#hook\"><code>duplex.<b>hook()</b></code></a>\n\n-------------------------------------------------------\n<a name=\"reduplexer\"></a>\n### reduplexer(writable, readable, options)\n\nCreate a [`Duplex`][3] stream based on `writable` and `readable` using\nthe given options.\n`writable` and `readable` can be null, and in that case they can be\n'hooked' later.\n\n-------------------------------------------------------\n<a name=\"hookWritable\"></a>\n\n### duplex.hookWritable(writable)\n\nHooks a `Writable` stream. It will throw if a `Writable` is already hooked.\n\n-------------------------------------------------------\n<a name=\"hookReadable\"></a>\n### duplex.hookReadable(writable)\n\nHooks a `Readable` stream. It will throw if a `Readable` stream is already hooked.\n\n-------------------------------------------------------\n<a name=\"hook\"></a>\n### duplex.hook(writable, readable)\n\nShortcut for:\n\n```js\nduplex.hookWritable(writable)\nduplex.hookReadable(readable)\n```\n\nBut it will not throw if any of the two are missing.\n\n## Tests\n\n`npm test`\n\n## License\n\nCopyright (c) 2014, Matteo Collina <hello@matteocollina.com>\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n  [1]: https://secure.travis-ci.org/mcollina/reduplexer.png\n  [2]: https://travis-ci.org/mcollina/reduplexer\n  [3]: http://nodejs.org/api/stream.html#stream_class_stream_duplex\n  [4]: http://nodejs.org/api/stream.html#stream_class_stream_readable\n  [5]: http://nodejs.org/api/stream.html#stream_class_stream_writable\n",
  "readmeFilename": "README.md",
  "_id": "reduplexer@1.1.0",
  "dist": {
    "shasum": "ef542b8fb712c8be2b0676ac21d37ad3e3da6373"
  },
  "_from": "reduplexer@^1.1.0",
  "_resolved": "https://registry.npmjs.org/reduplexer/-/reduplexer-1.1.0.tgz"
}
